proxy-providers:
  jichang-dingyue1:   #名称，默认即可
    type: http
    url: "https://github.com/vveg26/chromego_merge/raw/main/sub"  ###此处必填，url里面填入你的机场订阅链接，一般订阅链接加密了，需要转换为直链(https://acl4ssr-sub.github.io/)
    interval: 3600
    path:  ./jichang1.yaml  #机场订阅文件下载后的文件名及文件地址，默认即可
    health-check:
      enable: true
      interval: 600
      url: https://www.gstatic.com/generate_204

  jichang-dingyue2: WARP  #名称，默认即可
      type: http
      url: "https://neko-warp.nloli.xyz/neko_warp.yaml"  ###此处必填，url里面填入你的机场订阅链接，一般订阅链接加密了，需要转换为直链(https://acl4ssr-sub.github.io/)
      interval: 3600
      path:  ./warpPLUS.yaml  #机场订阅文件下载后的文件名及文件地址，默认即可
      health-check:
        enable: true
        interval: 1000
        url: https://cp.cloudflare.com/generate_204
        dialer-proxy: "前置节点"

proxy-groups:
  # 这个名字为前置节点的策略组可以选择是用自建节点还是机场节点作为前置节点

  - name: 节点选择
    type: select
    proxies:
      # - WARP        #给机场套warp之后的节点     
      - 机场负载均衡  #机场节点的负载均衡，下同
      - 机场自动选择    
      - 机场手动选择
  - name: 前置节点
    type: select
    proxies:  
      - 机场负载均衡  #机场节点的负载均衡，下同
      - 机场自动选择    
      - 机场手动选择
  - name: 机场负载均衡
    type: load-balance #负载均衡
    use:
      - jichang-dingyue1
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    #lazy: true
    #disable-udp: true
    strategy: round-robin #作为前置节点⽤这个⽐较好

  - name: 机场自动选择
    type: url-test #选出延迟最低的机场节点
    use:
      - jichang-dingyue1    #proxy-providers中的名字，默认即可
    url: "http://www.gstatic.com/generate_204"
    interval: 300
    tolerance: 50

  - name: 机场手动选择
    type: select #手动选择
    use:
      - jichang-dingyue1

rules:
    # 国内简单分流
    - GEOSITE,google,节点选择
    - GEOSITE,cn,DIRECT
    - GEOIP,CN,DIRECT
    - GEOIP,LAN,DIRECT
    - GEOIP,lan,DIRECT,no-resolve
    # 默认规则
    - MATCH,节点选择